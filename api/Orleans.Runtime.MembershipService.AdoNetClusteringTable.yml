### YamlMime:ManagedReference
items:
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable
  commentId: T:Orleans.Runtime.MembershipService.AdoNetClusteringTable
  id: AdoNetClusteringTable
  parent: Orleans.Runtime.MembershipService
  children:
  - Orleans.Runtime.MembershipService.AdoNetClusteringTable.#ctor(IGrainReferenceConverter,IOptions{ClusterOptions},IOptions{Orleans.Configuration.AdoNetClusteringSiloOptions},ILogger{Orleans.Runtime.MembershipService.AdoNetClusteringTable})
  - Orleans.Runtime.MembershipService.AdoNetClusteringTable.DeleteMembershipTableEntries(System.String)
  - Orleans.Runtime.MembershipService.AdoNetClusteringTable.InitializeMembershipTable(System.Boolean)
  - Orleans.Runtime.MembershipService.AdoNetClusteringTable.InsertRow(MembershipEntry,TableVersion)
  - Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadAll
  - Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadRow(SiloAddress)
  - Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateIAmAlive(MembershipEntry)
  - Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateRow(MembershipEntry,System.String,TableVersion)
  langs:
  - csharp
  - vb
  name: AdoNetClusteringTable
  nameWithType: AdoNetClusteringTable
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable
  type: Class
  source:
    remote:
      path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: AdoNetClusteringTable
    path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
    startLine: 9
  assemblies:
  - Orleans.Clustering.AdoNet
  namespace: Orleans.Runtime.MembershipService
  syntax:
    content: 'public class AdoNetClusteringTable : IMembershipTable'
    content.vb: >-
      Public Class AdoNetClusteringTable

          Inherits IMembershipTable
  inheritance:
  - System.Object
  extensionMethods:
  - Orleans.Runtime.MembershipService.AdoNetClusteringTable.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.#ctor(IGrainReferenceConverter,IOptions{ClusterOptions},IOptions{Orleans.Configuration.AdoNetClusteringSiloOptions},ILogger{Orleans.Runtime.MembershipService.AdoNetClusteringTable})
  commentId: M:Orleans.Runtime.MembershipService.AdoNetClusteringTable.#ctor(IGrainReferenceConverter,IOptions{ClusterOptions},IOptions{Orleans.Configuration.AdoNetClusteringSiloOptions},ILogger{Orleans.Runtime.MembershipService.AdoNetClusteringTable})
  id: '#ctor(IGrainReferenceConverter,IOptions{ClusterOptions},IOptions{Orleans.Configuration.AdoNetClusteringSiloOptions},ILogger{Orleans.Runtime.MembershipService.AdoNetClusteringTable})'
  parent: Orleans.Runtime.MembershipService.AdoNetClusteringTable
  langs:
  - csharp
  - vb
  name: AdoNetClusteringTable(IGrainReferenceConverter, IOptions<ClusterOptions>, IOptions<AdoNetClusteringSiloOptions>, ILogger<AdoNetClusteringTable>)
  nameWithType: AdoNetClusteringTable.AdoNetClusteringTable(IGrainReferenceConverter, IOptions<ClusterOptions>, IOptions<AdoNetClusteringSiloOptions>, ILogger<AdoNetClusteringTable>)
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.AdoNetClusteringTable(IGrainReferenceConverter, IOptions<ClusterOptions>, IOptions<Orleans.Configuration.AdoNetClusteringSiloOptions>, ILogger<Orleans.Runtime.MembershipService.AdoNetClusteringTable>)
  type: Constructor
  source:
    remote:
      path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: .ctor
    path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
    startLine: 17
  assemblies:
  - Orleans.Clustering.AdoNet
  namespace: Orleans.Runtime.MembershipService
  syntax:
    content: public AdoNetClusteringTable(IGrainReferenceConverter grainReferenceConverter, IOptions<ClusterOptions> clusterOptions, IOptions<AdoNetClusteringSiloOptions> clusteringOptions, ILogger<AdoNetClusteringTable> logger)
    parameters:
    - id: grainReferenceConverter
      type: IGrainReferenceConverter
    - id: clusterOptions
      type: IOptions{ClusterOptions}
    - id: clusteringOptions
      type: IOptions{Orleans.Configuration.AdoNetClusteringSiloOptions}
    - id: logger
      type: ILogger{Orleans.Runtime.MembershipService.AdoNetClusteringTable}
    content.vb: Public Sub New(grainReferenceConverter As IGrainReferenceConverter, clusterOptions As IOptions(Of ClusterOptions), clusteringOptions As IOptions(Of AdoNetClusteringSiloOptions), logger As ILogger(Of AdoNetClusteringTable))
  overload: Orleans.Runtime.MembershipService.AdoNetClusteringTable.#ctor*
  nameWithType.vb: AdoNetClusteringTable.AdoNetClusteringTable(IGrainReferenceConverter, IOptions(Of ClusterOptions), IOptions(Of AdoNetClusteringSiloOptions), ILogger(Of AdoNetClusteringTable))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Orleans.Runtime.MembershipService.AdoNetClusteringTable.AdoNetClusteringTable(IGrainReferenceConverter, IOptions(Of ClusterOptions), IOptions(Of Orleans.Configuration.AdoNetClusteringSiloOptions), ILogger(Of Orleans.Runtime.MembershipService.AdoNetClusteringTable))
  name.vb: AdoNetClusteringTable(IGrainReferenceConverter, IOptions(Of ClusterOptions), IOptions(Of AdoNetClusteringSiloOptions), ILogger(Of AdoNetClusteringTable))
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.InitializeMembershipTable(System.Boolean)
  commentId: M:Orleans.Runtime.MembershipService.AdoNetClusteringTable.InitializeMembershipTable(System.Boolean)
  id: InitializeMembershipTable(System.Boolean)
  parent: Orleans.Runtime.MembershipService.AdoNetClusteringTable
  langs:
  - csharp
  - vb
  name: InitializeMembershipTable(Boolean)
  nameWithType: AdoNetClusteringTable.InitializeMembershipTable(Boolean)
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.InitializeMembershipTable(System.Boolean)
  type: Method
  source:
    remote:
      path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: InitializeMembershipTable
    path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
    startLine: 29
  assemblies:
  - Orleans.Clustering.AdoNet
  namespace: Orleans.Runtime.MembershipService
  syntax:
    content: public Task InitializeMembershipTable(bool tryInitTableVersion)
    parameters:
    - id: tryInitTableVersion
      type: System.Boolean
    return:
      type: Task
    content.vb: Public Function InitializeMembershipTable(tryInitTableVersion As Boolean) As Task
  overload: Orleans.Runtime.MembershipService.AdoNetClusteringTable.InitializeMembershipTable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadRow(SiloAddress)
  commentId: M:Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadRow(SiloAddress)
  id: ReadRow(SiloAddress)
  parent: Orleans.Runtime.MembershipService.AdoNetClusteringTable
  langs:
  - csharp
  - vb
  name: ReadRow(SiloAddress)
  nameWithType: AdoNetClusteringTable.ReadRow(SiloAddress)
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadRow(SiloAddress)
  type: Method
  source:
    remote:
      path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: ReadRow
    path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
    startLine: 51
  assemblies:
  - Orleans.Clustering.AdoNet
  namespace: Orleans.Runtime.MembershipService
  syntax:
    content: public Task<MembershipTableData> ReadRow(SiloAddress key)
    parameters:
    - id: key
      type: SiloAddress
    return:
      type: Task{MembershipTableData}
    content.vb: Public Function ReadRow(key As SiloAddress) As Task(Of MembershipTableData)
  overload: Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadAll
  commentId: M:Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadAll
  id: ReadAll
  parent: Orleans.Runtime.MembershipService.AdoNetClusteringTable
  langs:
  - csharp
  - vb
  name: ReadAll()
  nameWithType: AdoNetClusteringTable.ReadAll()
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadAll()
  type: Method
  source:
    remote:
      path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: ReadAll
    path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
    startLine: 66
  assemblies:
  - Orleans.Clustering.AdoNet
  namespace: Orleans.Runtime.MembershipService
  syntax:
    content: public Task<MembershipTableData> ReadAll()
    return:
      type: Task{MembershipTableData}
    content.vb: Public Function ReadAll As Task(Of MembershipTableData)
  overload: Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadAll*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.InsertRow(MembershipEntry,TableVersion)
  commentId: M:Orleans.Runtime.MembershipService.AdoNetClusteringTable.InsertRow(MembershipEntry,TableVersion)
  id: InsertRow(MembershipEntry,TableVersion)
  parent: Orleans.Runtime.MembershipService.AdoNetClusteringTable
  langs:
  - csharp
  - vb
  name: InsertRow(MembershipEntry, TableVersion)
  nameWithType: AdoNetClusteringTable.InsertRow(MembershipEntry, TableVersion)
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.InsertRow(MembershipEntry, TableVersion)
  type: Method
  source:
    remote:
      path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: InsertRow
    path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
    startLine: 81
  assemblies:
  - Orleans.Clustering.AdoNet
  namespace: Orleans.Runtime.MembershipService
  syntax:
    content: public Task<bool> InsertRow(MembershipEntry entry, TableVersion tableVersion)
    parameters:
    - id: entry
      type: MembershipEntry
    - id: tableVersion
      type: TableVersion
    return:
      type: Task{System.Boolean}
    content.vb: Public Function InsertRow(entry As MembershipEntry, tableVersion As TableVersion) As Task(Of Boolean)
  overload: Orleans.Runtime.MembershipService.AdoNetClusteringTable.InsertRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateRow(MembershipEntry,System.String,TableVersion)
  commentId: M:Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateRow(MembershipEntry,System.String,TableVersion)
  id: UpdateRow(MembershipEntry,System.String,TableVersion)
  parent: Orleans.Runtime.MembershipService.AdoNetClusteringTable
  langs:
  - csharp
  - vb
  name: UpdateRow(MembershipEntry, String, TableVersion)
  nameWithType: AdoNetClusteringTable.UpdateRow(MembershipEntry, String, TableVersion)
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateRow(MembershipEntry, System.String, TableVersion)
  type: Method
  source:
    remote:
      path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: UpdateRow
    path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
    startLine: 113
  assemblies:
  - Orleans.Clustering.AdoNet
  namespace: Orleans.Runtime.MembershipService
  syntax:
    content: public Task<bool> UpdateRow(MembershipEntry entry, string etag, TableVersion tableVersion)
    parameters:
    - id: entry
      type: MembershipEntry
    - id: etag
      type: System.String
    - id: tableVersion
      type: TableVersion
    return:
      type: Task{System.Boolean}
    content.vb: Public Function UpdateRow(entry As MembershipEntry, etag As String, tableVersion As TableVersion) As Task(Of Boolean)
  overload: Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateIAmAlive(MembershipEntry)
  commentId: M:Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateIAmAlive(MembershipEntry)
  id: UpdateIAmAlive(MembershipEntry)
  parent: Orleans.Runtime.MembershipService.AdoNetClusteringTable
  langs:
  - csharp
  - vb
  name: UpdateIAmAlive(MembershipEntry)
  nameWithType: AdoNetClusteringTable.UpdateIAmAlive(MembershipEntry)
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateIAmAlive(MembershipEntry)
  type: Method
  source:
    remote:
      path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: UpdateIAmAlive
    path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
    startLine: 145
  assemblies:
  - Orleans.Clustering.AdoNet
  namespace: Orleans.Runtime.MembershipService
  syntax:
    content: public Task UpdateIAmAlive(MembershipEntry entry)
    parameters:
    - id: entry
      type: MembershipEntry
    return:
      type: Task
    content.vb: Public Function UpdateIAmAlive(entry As MembershipEntry) As Task
  overload: Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateIAmAlive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.DeleteMembershipTableEntries(System.String)
  commentId: M:Orleans.Runtime.MembershipService.AdoNetClusteringTable.DeleteMembershipTableEntries(System.String)
  id: DeleteMembershipTableEntries(System.String)
  parent: Orleans.Runtime.MembershipService.AdoNetClusteringTable
  langs:
  - csharp
  - vb
  name: DeleteMembershipTableEntries(String)
  nameWithType: AdoNetClusteringTable.DeleteMembershipTableEntries(String)
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.DeleteMembershipTableEntries(System.String)
  type: Method
  source:
    remote:
      path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: DeleteMembershipTableEntries
    path: src/AdoNet/Orleans.Clustering.AdoNet/Messaging/AdoNetClusteringTable.cs
    startLine: 165
  assemblies:
  - Orleans.Clustering.AdoNet
  namespace: Orleans.Runtime.MembershipService
  syntax:
    content: public Task DeleteMembershipTableEntries(string clusterId)
    parameters:
    - id: clusterId
      type: System.String
    return:
      type: Task
    content.vb: Public Function DeleteMembershipTableEntries(clusterId As String) As Task
  overload: Orleans.Runtime.MembershipService.AdoNetClusteringTable.DeleteMembershipTableEntries*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Orleans.Runtime.MembershipService
  commentId: N:Orleans.Runtime.MembershipService
  isExternal: false
  name: Orleans.Runtime.MembershipService
  nameWithType: Orleans.Runtime.MembershipService
  fullName: Orleans.Runtime.MembershipService
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  parent: Orleans.Concurrency.ImmutableExt
  definition: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  name: AsImmutable<AdoNetClusteringTable>()
  nameWithType: ImmutableExt.AsImmutable<AdoNetClusteringTable>()
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<Orleans.Runtime.MembershipService.AdoNetClusteringTable>()
  nameWithType.vb: ImmutableExt.AsImmutable(Of AdoNetClusteringTable)()
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of Orleans.Runtime.MembershipService.AdoNetClusteringTable)()
  name.vb: AsImmutable(Of AdoNetClusteringTable)()
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable<AdoNetClusteringTable>
    nameWithType: ImmutableExt.AsImmutable<AdoNetClusteringTable>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<Orleans.Runtime.MembershipService.AdoNetClusteringTable>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable(Of AdoNetClusteringTable)
    nameWithType: ImmutableExt.AsImmutable(Of AdoNetClusteringTable)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of Orleans.Runtime.MembershipService.AdoNetClusteringTable)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  isExternal: false
  name: AsImmutable<T>(T)
  nameWithType: ImmutableExt.AsImmutable<T>(T)
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>(T)
  nameWithType.vb: ImmutableExt.AsImmutable(Of T)(T)
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)(T)
  name.vb: AsImmutable(Of T)(T)
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable<T>
    nameWithType: ImmutableExt.AsImmutable<T>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable(Of T)
    nameWithType: ImmutableExt.AsImmutable(Of T)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Concurrency.ImmutableExt
  commentId: T:Orleans.Concurrency.ImmutableExt
  parent: Orleans.Concurrency
  isExternal: false
  name: ImmutableExt
  nameWithType: ImmutableExt
  fullName: Orleans.Concurrency.ImmutableExt
- uid: Orleans.Concurrency
  commentId: N:Orleans.Concurrency
  isExternal: false
  name: Orleans.Concurrency
  nameWithType: Orleans.Concurrency
  fullName: Orleans.Concurrency
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.#ctor*
  commentId: Overload:Orleans.Runtime.MembershipService.AdoNetClusteringTable.#ctor
  isExternal: false
  name: AdoNetClusteringTable
  nameWithType: AdoNetClusteringTable.AdoNetClusteringTable
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.AdoNetClusteringTable
- uid: IGrainReferenceConverter
  isExternal: true
  name: IGrainReferenceConverter
  nameWithType: IGrainReferenceConverter
  fullName: IGrainReferenceConverter
- uid: IOptions{ClusterOptions}
  commentId: '!:IOptions{ClusterOptions}'
  definition: IOptions`1
  name: IOptions<ClusterOptions>
  nameWithType: IOptions<ClusterOptions>
  fullName: IOptions<ClusterOptions>
  nameWithType.vb: IOptions(Of ClusterOptions)
  fullName.vb: IOptions(Of ClusterOptions)
  name.vb: IOptions(Of ClusterOptions)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ClusterOptions
    name: ClusterOptions
    nameWithType: ClusterOptions
    fullName: ClusterOptions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ClusterOptions
    name: ClusterOptions
    nameWithType: ClusterOptions
    fullName: ClusterOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptions{Orleans.Configuration.AdoNetClusteringSiloOptions}
  commentId: '!:IOptions{Orleans.Configuration.AdoNetClusteringSiloOptions}'
  definition: IOptions`1
  name: IOptions<AdoNetClusteringSiloOptions>
  nameWithType: IOptions<AdoNetClusteringSiloOptions>
  fullName: IOptions<Orleans.Configuration.AdoNetClusteringSiloOptions>
  nameWithType.vb: IOptions(Of AdoNetClusteringSiloOptions)
  fullName.vb: IOptions(Of Orleans.Configuration.AdoNetClusteringSiloOptions)
  name.vb: IOptions(Of AdoNetClusteringSiloOptions)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Orleans.Configuration.AdoNetClusteringSiloOptions
    name: AdoNetClusteringSiloOptions
    nameWithType: AdoNetClusteringSiloOptions
    fullName: Orleans.Configuration.AdoNetClusteringSiloOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Orleans.Configuration.AdoNetClusteringSiloOptions
    name: AdoNetClusteringSiloOptions
    nameWithType: AdoNetClusteringSiloOptions
    fullName: Orleans.Configuration.AdoNetClusteringSiloOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger{Orleans.Runtime.MembershipService.AdoNetClusteringTable}
  commentId: '!:ILogger{Orleans.Runtime.MembershipService.AdoNetClusteringTable}'
  definition: ILogger`1
  name: ILogger<AdoNetClusteringTable>
  nameWithType: ILogger<AdoNetClusteringTable>
  fullName: ILogger<Orleans.Runtime.MembershipService.AdoNetClusteringTable>
  nameWithType.vb: ILogger(Of AdoNetClusteringTable)
  fullName.vb: ILogger(Of Orleans.Runtime.MembershipService.AdoNetClusteringTable)
  name.vb: ILogger(Of AdoNetClusteringTable)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable
    name: AdoNetClusteringTable
    nameWithType: AdoNetClusteringTable
    fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable
    name: AdoNetClusteringTable
    nameWithType: AdoNetClusteringTable
    fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptions`1
  isExternal: true
  name: IOptions<>
  nameWithType: IOptions<>
  fullName: IOptions<>
  nameWithType.vb: IOptions(Of )
  fullName.vb: IOptions(Of )
  name.vb: IOptions(Of )
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.InitializeMembershipTable*
  commentId: Overload:Orleans.Runtime.MembershipService.AdoNetClusteringTable.InitializeMembershipTable
  isExternal: false
  name: InitializeMembershipTable
  nameWithType: AdoNetClusteringTable.InitializeMembershipTable
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.InitializeMembershipTable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadRow*
  commentId: Overload:Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadRow
  isExternal: false
  name: ReadRow
  nameWithType: AdoNetClusteringTable.ReadRow
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadRow
- uid: SiloAddress
  commentId: '!:SiloAddress'
  isExternal: true
  name: SiloAddress
  nameWithType: SiloAddress
  fullName: SiloAddress
- uid: Task{MembershipTableData}
  commentId: '!:Task{MembershipTableData}'
  definition: Task`1
  name: Task<MembershipTableData>
  nameWithType: Task<MembershipTableData>
  fullName: Task<MembershipTableData>
  nameWithType.vb: Task(Of MembershipTableData)
  fullName.vb: Task(Of MembershipTableData)
  name.vb: Task(Of MembershipTableData)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MembershipTableData
    name: MembershipTableData
    nameWithType: MembershipTableData
    fullName: MembershipTableData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MembershipTableData
    name: MembershipTableData
    nameWithType: MembershipTableData
    fullName: MembershipTableData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadAll*
  commentId: Overload:Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadAll
  isExternal: false
  name: ReadAll
  nameWithType: AdoNetClusteringTable.ReadAll
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.ReadAll
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.InsertRow*
  commentId: Overload:Orleans.Runtime.MembershipService.AdoNetClusteringTable.InsertRow
  isExternal: false
  name: InsertRow
  nameWithType: AdoNetClusteringTable.InsertRow
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.InsertRow
- uid: MembershipEntry
  isExternal: true
  name: MembershipEntry
  nameWithType: MembershipEntry
  fullName: MembershipEntry
- uid: TableVersion
  isExternal: true
  name: TableVersion
  nameWithType: TableVersion
  fullName: TableVersion
- uid: Task{System.Boolean}
  commentId: '!:Task{System.Boolean}'
  definition: Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateRow*
  commentId: Overload:Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateRow
  isExternal: false
  name: UpdateRow
  nameWithType: AdoNetClusteringTable.UpdateRow
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateRow
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateIAmAlive*
  commentId: Overload:Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateIAmAlive
  isExternal: false
  name: UpdateIAmAlive
  nameWithType: AdoNetClusteringTable.UpdateIAmAlive
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.UpdateIAmAlive
- uid: Orleans.Runtime.MembershipService.AdoNetClusteringTable.DeleteMembershipTableEntries*
  commentId: Overload:Orleans.Runtime.MembershipService.AdoNetClusteringTable.DeleteMembershipTableEntries
  isExternal: false
  name: DeleteMembershipTableEntries
  nameWithType: AdoNetClusteringTable.DeleteMembershipTableEntries
  fullName: Orleans.Runtime.MembershipService.AdoNetClusteringTable.DeleteMembershipTableEntries
