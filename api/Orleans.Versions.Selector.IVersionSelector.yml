### YamlMime:ManagedReference
items:
- uid: Orleans.Versions.Selector.IVersionSelector
  commentId: T:Orleans.Versions.Selector.IVersionSelector
  id: IVersionSelector
  parent: Orleans.Versions.Selector
  children:
  - Orleans.Versions.Selector.IVersionSelector.GetSuitableVersion(System.UInt16,IReadOnlyList{System.UInt16},Orleans.Versions.Compatibility.ICompatibilityDirector)
  langs:
  - csharp
  - vb
  name: IVersionSelector
  nameWithType: IVersionSelector
  fullName: Orleans.Versions.Selector.IVersionSelector
  type: Interface
  source:
    remote:
      path: src/Orleans.Core.Abstractions/Versions/Selector/IVersionSelector.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: IVersionSelector
    path: src/Orleans.Core.Abstractions/Versions/Selector/IVersionSelector.cs
    startLine: 6
  assemblies:
  - Orleans.Core.Abstractions
  namespace: Orleans.Versions.Selector
  syntax:
    content: public interface IVersionSelector
    content.vb: Public Interface IVersionSelector
  extensionMethods:
  - Orleans.Versions.Selector.IVersionSelector.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Orleans.Versions.Selector.IVersionSelector.GetSuitableVersion(System.UInt16,IReadOnlyList{System.UInt16},Orleans.Versions.Compatibility.ICompatibilityDirector)
  commentId: M:Orleans.Versions.Selector.IVersionSelector.GetSuitableVersion(System.UInt16,IReadOnlyList{System.UInt16},Orleans.Versions.Compatibility.ICompatibilityDirector)
  id: GetSuitableVersion(System.UInt16,IReadOnlyList{System.UInt16},Orleans.Versions.Compatibility.ICompatibilityDirector)
  parent: Orleans.Versions.Selector.IVersionSelector
  langs:
  - csharp
  - vb
  name: GetSuitableVersion(UInt16, IReadOnlyList<UInt16>, ICompatibilityDirector)
  nameWithType: IVersionSelector.GetSuitableVersion(UInt16, IReadOnlyList<UInt16>, ICompatibilityDirector)
  fullName: Orleans.Versions.Selector.IVersionSelector.GetSuitableVersion(System.UInt16, IReadOnlyList<System.UInt16>, Orleans.Versions.Compatibility.ICompatibilityDirector)
  type: Method
  source:
    remote:
      path: src/Orleans.Core.Abstractions/Versions/Selector/IVersionSelector.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: GetSuitableVersion
    path: src/Orleans.Core.Abstractions/Versions/Selector/IVersionSelector.cs
    startLine: 8
  assemblies:
  - Orleans.Core.Abstractions
  namespace: Orleans.Versions.Selector
  syntax:
    content: IReadOnlyList<ushort> GetSuitableVersion(ushort requestedVersion, IReadOnlyList<ushort> availableVersions, ICompatibilityDirector compatibilityDirector)
    parameters:
    - id: requestedVersion
      type: System.UInt16
    - id: availableVersions
      type: IReadOnlyList{System.UInt16}
    - id: compatibilityDirector
      type: Orleans.Versions.Compatibility.ICompatibilityDirector
    return:
      type: IReadOnlyList{System.UInt16}
    content.vb: Function GetSuitableVersion(requestedVersion As UShort, availableVersions As IReadOnlyList(Of UShort), compatibilityDirector As ICompatibilityDirector) As IReadOnlyList(Of UShort)
  overload: Orleans.Versions.Selector.IVersionSelector.GetSuitableVersion*
  nameWithType.vb: IVersionSelector.GetSuitableVersion(UInt16, IReadOnlyList(Of UInt16), ICompatibilityDirector)
  fullName.vb: Orleans.Versions.Selector.IVersionSelector.GetSuitableVersion(System.UInt16, IReadOnlyList(Of System.UInt16), Orleans.Versions.Compatibility.ICompatibilityDirector)
  name.vb: GetSuitableVersion(UInt16, IReadOnlyList(Of UInt16), ICompatibilityDirector)
references:
- uid: Orleans.Versions.Selector
  commentId: N:Orleans.Versions.Selector
  isExternal: false
  name: Orleans.Versions.Selector
  nameWithType: Orleans.Versions.Selector
  fullName: Orleans.Versions.Selector
- uid: Orleans.Versions.Selector.IVersionSelector.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  parent: Orleans.Concurrency.ImmutableExt
  definition: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  name: AsImmutable<IVersionSelector>()
  nameWithType: ImmutableExt.AsImmutable<IVersionSelector>()
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<Orleans.Versions.Selector.IVersionSelector>()
  nameWithType.vb: ImmutableExt.AsImmutable(Of IVersionSelector)()
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of Orleans.Versions.Selector.IVersionSelector)()
  name.vb: AsImmutable(Of IVersionSelector)()
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable<IVersionSelector>
    nameWithType: ImmutableExt.AsImmutable<IVersionSelector>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<Orleans.Versions.Selector.IVersionSelector>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable(Of IVersionSelector)
    nameWithType: ImmutableExt.AsImmutable(Of IVersionSelector)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of Orleans.Versions.Selector.IVersionSelector)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  isExternal: false
  name: AsImmutable<T>(T)
  nameWithType: ImmutableExt.AsImmutable<T>(T)
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>(T)
  nameWithType.vb: ImmutableExt.AsImmutable(Of T)(T)
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)(T)
  name.vb: AsImmutable(Of T)(T)
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable<T>
    nameWithType: ImmutableExt.AsImmutable<T>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable(Of T)
    nameWithType: ImmutableExt.AsImmutable(Of T)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Concurrency.ImmutableExt
  commentId: T:Orleans.Concurrency.ImmutableExt
  parent: Orleans.Concurrency
  isExternal: false
  name: ImmutableExt
  nameWithType: ImmutableExt
  fullName: Orleans.Concurrency.ImmutableExt
- uid: Orleans.Concurrency
  commentId: N:Orleans.Concurrency
  isExternal: false
  name: Orleans.Concurrency
  nameWithType: Orleans.Concurrency
  fullName: Orleans.Concurrency
- uid: Orleans.Versions.Selector.IVersionSelector.GetSuitableVersion*
  commentId: Overload:Orleans.Versions.Selector.IVersionSelector.GetSuitableVersion
  isExternal: false
  name: GetSuitableVersion
  nameWithType: IVersionSelector.GetSuitableVersion
  fullName: Orleans.Versions.Selector.IVersionSelector.GetSuitableVersion
- uid: System.UInt16
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: IReadOnlyList{System.UInt16}
  commentId: '!:IReadOnlyList{System.UInt16}'
  definition: IReadOnlyList`1
  name: IReadOnlyList<UInt16>
  nameWithType: IReadOnlyList<UInt16>
  fullName: IReadOnlyList<System.UInt16>
  nameWithType.vb: IReadOnlyList(Of UInt16)
  fullName.vb: IReadOnlyList(Of System.UInt16)
  name.vb: IReadOnlyList(Of UInt16)
  spec.csharp:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Versions.Compatibility.ICompatibilityDirector
  commentId: T:Orleans.Versions.Compatibility.ICompatibilityDirector
  parent: Orleans.Versions.Compatibility
  isExternal: false
  name: ICompatibilityDirector
  nameWithType: ICompatibilityDirector
  fullName: Orleans.Versions.Compatibility.ICompatibilityDirector
- uid: IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<>
  nameWithType: IReadOnlyList<>
  fullName: IReadOnlyList<>
  nameWithType.vb: IReadOnlyList(Of )
  fullName.vb: IReadOnlyList(Of )
  name.vb: IReadOnlyList(Of )
  spec.csharp:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Versions.Compatibility
  commentId: N:Orleans.Versions.Compatibility
  isExternal: false
  name: Orleans.Versions.Compatibility
  nameWithType: Orleans.Versions.Compatibility
  fullName: Orleans.Versions.Compatibility
