### YamlMime:ManagedReference
items:
- uid: Orleans.Storage.IStorageSerializer
  commentId: T:Orleans.Storage.IStorageSerializer
  id: IStorageSerializer
  parent: Orleans.Storage
  children:
  - Orleans.Storage.IStorageSerializer.CanStream
  - Orleans.Storage.IStorageSerializer.Serialize(Stream,System.Object)
  - Orleans.Storage.IStorageSerializer.Serialize(System.Object)
  - Orleans.Storage.IStorageSerializer.Serialize(TextWriter,System.Object)
  - Orleans.Storage.IStorageSerializer.Tag
  langs:
  - csharp
  - vb
  name: IStorageSerializer
  nameWithType: IStorageSerializer
  fullName: Orleans.Storage.IStorageSerializer
  type: Interface
  source:
    remote:
      path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/IStorageSerializer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: IStorageSerializer
    path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/IStorageSerializer.cs
    startLine: 8
  assemblies:
  - Orleans.Persistence.AdoNet
  namespace: Orleans.Storage
  summary: "\nA canonical interface for a storage provider serializer.\n"
  example: []
  syntax:
    content: public interface IStorageSerializer
    content.vb: Public Interface IStorageSerializer
  extensionMethods:
  - Orleans.Storage.IStorageSerializer.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Orleans.Storage.IStorageSerializer.CanStream
  commentId: P:Orleans.Storage.IStorageSerializer.CanStream
  id: CanStream
  parent: Orleans.Storage.IStorageSerializer
  langs:
  - csharp
  - vb
  name: CanStream
  nameWithType: IStorageSerializer.CanStream
  fullName: Orleans.Storage.IStorageSerializer.CanStream
  type: Property
  source:
    remote:
      path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/IStorageSerializer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: CanStream
    path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/IStorageSerializer.cs
    startLine: 13
  assemblies:
  - Orleans.Persistence.AdoNet
  namespace: Orleans.Storage
  summary: "\nCan this provider stream data.\n"
  example: []
  syntax:
    content: bool CanStream { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property CanStream As Boolean
  overload: Orleans.Storage.IStorageSerializer.CanStream*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Orleans.Storage.IStorageSerializer.Tag
  commentId: P:Orleans.Storage.IStorageSerializer.Tag
  id: Tag
  parent: Orleans.Storage.IStorageSerializer
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: IStorageSerializer.Tag
  fullName: Orleans.Storage.IStorageSerializer.Tag
  type: Property
  source:
    remote:
      path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/IStorageSerializer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: Tag
    path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/IStorageSerializer.cs
    startLine: 18
  assemblies:
  - Orleans.Persistence.AdoNet
  namespace: Orleans.Storage
  summary: "\nAn optional tag that a <xref href=\"Orleans.Storage.IStorageSerializationPicker\" data-throw-if-not-resolved=\"false\"></xref> or <see cref=\"!:IStorageProvider\"></see> provider can use to pick this serializer.\n"
  example: []
  syntax:
    content: string Tag { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Tag As String
  overload: Orleans.Storage.IStorageSerializer.Tag*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Orleans.Storage.IStorageSerializer.Serialize(System.Object)
  commentId: M:Orleans.Storage.IStorageSerializer.Serialize(System.Object)
  id: Serialize(System.Object)
  parent: Orleans.Storage.IStorageSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Object)
  nameWithType: IStorageSerializer.Serialize(Object)
  fullName: Orleans.Storage.IStorageSerializer.Serialize(System.Object)
  type: Method
  source:
    remote:
      path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/IStorageSerializer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: Serialize
    path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/IStorageSerializer.cs
    startLine: 25
  assemblies:
  - Orleans.Persistence.AdoNet
  namespace: Orleans.Storage
  summary: "\nSerializes the given data.\n"
  example: []
  syntax:
    content: object Serialize(object data)
    parameters:
    - id: data
      type: System.Object
      description: The data to be serialized.
    return:
      type: System.Object
      description: The serialized data.
    content.vb: Function Serialize(data As Object) As Object
  overload: Orleans.Storage.IStorageSerializer.Serialize*
- uid: Orleans.Storage.IStorageSerializer.Serialize(Stream,System.Object)
  commentId: M:Orleans.Storage.IStorageSerializer.Serialize(Stream,System.Object)
  id: Serialize(Stream,System.Object)
  parent: Orleans.Storage.IStorageSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Stream, Object)
  nameWithType: IStorageSerializer.Serialize(Stream, Object)
  fullName: Orleans.Storage.IStorageSerializer.Serialize(Stream, System.Object)
  type: Method
  source:
    remote:
      path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/IStorageSerializer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: Serialize
    path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/IStorageSerializer.cs
    startLine: 33
  assemblies:
  - Orleans.Persistence.AdoNet
  namespace: Orleans.Storage
  summary: "\nSerializes the given data to a stream.\n"
  example: []
  syntax:
    content: object Serialize(Stream dataStream, object data)
    parameters:
    - id: dataStream
      type: Stream
      description: The stream to serialize to.
    - id: data
      type: System.Object
      description: The data to serialize.
    return:
      type: System.Object
      description: The stream to which data was serialized. The same as <code data-dev-comment-type="paramref" class="paramref">dataStream</code>.
    content.vb: Function Serialize(dataStream As Stream, data As Object) As Object
  overload: Orleans.Storage.IStorageSerializer.Serialize*
- uid: Orleans.Storage.IStorageSerializer.Serialize(TextWriter,System.Object)
  commentId: M:Orleans.Storage.IStorageSerializer.Serialize(TextWriter,System.Object)
  id: Serialize(TextWriter,System.Object)
  parent: Orleans.Storage.IStorageSerializer
  langs:
  - csharp
  - vb
  name: Serialize(TextWriter, Object)
  nameWithType: IStorageSerializer.Serialize(TextWriter, Object)
  fullName: Orleans.Storage.IStorageSerializer.Serialize(TextWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/IStorageSerializer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: Serialize
    path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/IStorageSerializer.cs
    startLine: 42
  assemblies:
  - Orleans.Persistence.AdoNet
  namespace: Orleans.Storage
  summary: "\nSerializes the given data to a text stream.\n"
  example: []
  syntax:
    content: object Serialize(TextWriter writer, object data)
    parameters:
    - id: writer
      type: TextWriter
      description: The stream to serialize the text to.
    - id: data
      type: System.Object
      description: The data to serialize.
    return:
      type: System.Object
      description: The stream to which data was serialized. The same as <code data-dev-comment-type="paramref" class="paramref">writer</code>.
    content.vb: Function Serialize(writer As TextWriter, data As Object) As Object
  overload: Orleans.Storage.IStorageSerializer.Serialize*
references:
- uid: Orleans.Storage
  commentId: N:Orleans.Storage
  isExternal: false
  name: Orleans.Storage
  nameWithType: Orleans.Storage
  fullName: Orleans.Storage
- uid: Orleans.Storage.IStorageSerializer.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  parent: Orleans.Concurrency.ImmutableExt
  definition: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  name: AsImmutable<IStorageSerializer>()
  nameWithType: ImmutableExt.AsImmutable<IStorageSerializer>()
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<Orleans.Storage.IStorageSerializer>()
  nameWithType.vb: ImmutableExt.AsImmutable(Of IStorageSerializer)()
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of Orleans.Storage.IStorageSerializer)()
  name.vb: AsImmutable(Of IStorageSerializer)()
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable<IStorageSerializer>
    nameWithType: ImmutableExt.AsImmutable<IStorageSerializer>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<Orleans.Storage.IStorageSerializer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable(Of IStorageSerializer)
    nameWithType: ImmutableExt.AsImmutable(Of IStorageSerializer)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of Orleans.Storage.IStorageSerializer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  isExternal: false
  name: AsImmutable<T>(T)
  nameWithType: ImmutableExt.AsImmutable<T>(T)
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>(T)
  nameWithType.vb: ImmutableExt.AsImmutable(Of T)(T)
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)(T)
  name.vb: AsImmutable(Of T)(T)
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable<T>
    nameWithType: ImmutableExt.AsImmutable<T>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable(Of T)
    nameWithType: ImmutableExt.AsImmutable(Of T)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Concurrency.ImmutableExt
  commentId: T:Orleans.Concurrency.ImmutableExt
  parent: Orleans.Concurrency
  isExternal: false
  name: ImmutableExt
  nameWithType: ImmutableExt
  fullName: Orleans.Concurrency.ImmutableExt
- uid: Orleans.Concurrency
  commentId: N:Orleans.Concurrency
  isExternal: false
  name: Orleans.Concurrency
  nameWithType: Orleans.Concurrency
  fullName: Orleans.Concurrency
- uid: Orleans.Storage.IStorageSerializer.CanStream*
  commentId: Overload:Orleans.Storage.IStorageSerializer.CanStream
  isExternal: false
  name: CanStream
  nameWithType: IStorageSerializer.CanStream
  fullName: Orleans.Storage.IStorageSerializer.CanStream
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Orleans.Storage.IStorageSerializationPicker
  commentId: T:Orleans.Storage.IStorageSerializationPicker
  parent: Orleans.Storage
  isExternal: false
  name: IStorageSerializationPicker
  nameWithType: IStorageSerializationPicker
  fullName: Orleans.Storage.IStorageSerializationPicker
- uid: Orleans.Storage.IStorageSerializer.Tag*
  commentId: Overload:Orleans.Storage.IStorageSerializer.Tag
  isExternal: false
  name: Tag
  nameWithType: IStorageSerializer.Tag
  fullName: Orleans.Storage.IStorageSerializer.Tag
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Orleans.Storage.IStorageSerializer.Serialize*
  commentId: Overload:Orleans.Storage.IStorageSerializer.Serialize
  isExternal: false
  name: Serialize
  nameWithType: IStorageSerializer.Serialize
  fullName: Orleans.Storage.IStorageSerializer.Serialize
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: TextWriter
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: TextWriter
