### YamlMime:ManagedReference
items:
- uid: Orleans.EventSourcing.Common.INotificationMessage
  commentId: T:Orleans.EventSourcing.Common.INotificationMessage
  id: INotificationMessage
  parent: Orleans.EventSourcing.Common
  children:
  - Orleans.EventSourcing.Common.INotificationMessage.Version
  langs:
  - csharp
  - vb
  name: INotificationMessage
  nameWithType: INotificationMessage
  fullName: Orleans.EventSourcing.Common.INotificationMessage
  type: Interface
  source:
    remote:
      path: src/Orleans.EventSourcing/Common/NotificationMessage.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: INotificationMessage
    path: src/Orleans.EventSourcing/Common/NotificationMessage.cs
    startLine: 13
  assemblies:
  - Orleans.EventSourcing
  namespace: Orleans.EventSourcing.Common
  summary: "\nBase class for notification messages that are sent by log view adaptors to other \nclusters, after updating the log. All subclasses must be serializable.\n"
  example: []
  syntax:
    content: 'public interface INotificationMessage : ILogConsistencyProtocolMessage'
    content.vb: >-
      Public Interface INotificationMessage

          Inherits ILogConsistencyProtocolMessage
  extensionMethods:
  - Orleans.EventSourcing.Common.INotificationMessage.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Orleans.EventSourcing.Common.INotificationMessage.Version
  commentId: P:Orleans.EventSourcing.Common.INotificationMessage.Version
  id: Version
  parent: Orleans.EventSourcing.Common.INotificationMessage
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: INotificationMessage.Version
  fullName: Orleans.EventSourcing.Common.INotificationMessage.Version
  type: Property
  source:
    remote:
      path: src/Orleans.EventSourcing/Common/NotificationMessage.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: Version
    path: src/Orleans.EventSourcing/Common/NotificationMessage.cs
    startLine: 16
  assemblies:
  - Orleans.EventSourcing
  namespace: Orleans.EventSourcing.Common
  summary: The version number.
  example: []
  syntax:
    content: int Version { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Version As Integer
  overload: Orleans.EventSourcing.Common.INotificationMessage.Version*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Orleans.EventSourcing.Common
  commentId: N:Orleans.EventSourcing.Common
  isExternal: false
  name: Orleans.EventSourcing.Common
  nameWithType: Orleans.EventSourcing.Common
  fullName: Orleans.EventSourcing.Common
- uid: Orleans.EventSourcing.Common.INotificationMessage.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  parent: Orleans.Concurrency.ImmutableExt
  definition: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  name: AsImmutable<INotificationMessage>()
  nameWithType: ImmutableExt.AsImmutable<INotificationMessage>()
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<Orleans.EventSourcing.Common.INotificationMessage>()
  nameWithType.vb: ImmutableExt.AsImmutable(Of INotificationMessage)()
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of Orleans.EventSourcing.Common.INotificationMessage)()
  name.vb: AsImmutable(Of INotificationMessage)()
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable<INotificationMessage>
    nameWithType: ImmutableExt.AsImmutable<INotificationMessage>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<Orleans.EventSourcing.Common.INotificationMessage>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable(Of INotificationMessage)
    nameWithType: ImmutableExt.AsImmutable(Of INotificationMessage)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of Orleans.EventSourcing.Common.INotificationMessage)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  isExternal: false
  name: AsImmutable<T>(T)
  nameWithType: ImmutableExt.AsImmutable<T>(T)
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>(T)
  nameWithType.vb: ImmutableExt.AsImmutable(Of T)(T)
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)(T)
  name.vb: AsImmutable(Of T)(T)
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable<T>
    nameWithType: ImmutableExt.AsImmutable<T>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable(Of T)
    nameWithType: ImmutableExt.AsImmutable(Of T)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Concurrency.ImmutableExt
  commentId: T:Orleans.Concurrency.ImmutableExt
  parent: Orleans.Concurrency
  isExternal: false
  name: ImmutableExt
  nameWithType: ImmutableExt
  fullName: Orleans.Concurrency.ImmutableExt
- uid: Orleans.Concurrency
  commentId: N:Orleans.Concurrency
  isExternal: false
  name: Orleans.Concurrency
  nameWithType: Orleans.Concurrency
  fullName: Orleans.Concurrency
- uid: Orleans.EventSourcing.Common.INotificationMessage.Version*
  commentId: Overload:Orleans.EventSourcing.Common.INotificationMessage.Version
  isExternal: false
  name: Version
  nameWithType: INotificationMessage.Version
  fullName: Orleans.EventSourcing.Common.INotificationMessage.Version
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
