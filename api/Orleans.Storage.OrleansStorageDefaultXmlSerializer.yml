### YamlMime:ManagedReference
items:
- uid: Orleans.Storage.OrleansStorageDefaultXmlSerializer
  commentId: T:Orleans.Storage.OrleansStorageDefaultXmlSerializer
  id: OrleansStorageDefaultXmlSerializer
  parent: Orleans.Storage
  children:
  - Orleans.Storage.OrleansStorageDefaultXmlSerializer.#ctor(System.String)
  - Orleans.Storage.OrleansStorageDefaultXmlSerializer.CanStream
  - Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize(Stream,System.Object)
  - Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize(System.Object)
  - Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize(TextWriter,System.Object)
  - Orleans.Storage.OrleansStorageDefaultXmlSerializer.Tag
  langs:
  - csharp
  - vb
  name: OrleansStorageDefaultXmlSerializer
  nameWithType: OrleansStorageDefaultXmlSerializer
  fullName: Orleans.Storage.OrleansStorageDefaultXmlSerializer
  type: Class
  source:
    remote:
      path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/OrleansStorageDefaultXmlSerializer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: OrleansStorageDefaultXmlSerializer
    path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/OrleansStorageDefaultXmlSerializer.cs
    startLine: 11
  assemblies:
  - Orleans.Persistence.AdoNet
  namespace: Orleans.Storage
  summary: "\nA default XML serializer for storage providers.\n"
  example: []
  syntax:
    content: 'public class OrleansStorageDefaultXmlSerializer : object, IStorageSerializer'
    content.vb: >-
      Public Class OrleansStorageDefaultXmlSerializer

          Inherits Object

          Implements IStorageSerializer
  inheritance:
  - System.Object
  implements:
  - Orleans.Storage.IStorageSerializer
  extensionMethods:
  - Orleans.Storage.OrleansStorageDefaultXmlSerializer.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Orleans.Storage.OrleansStorageDefaultXmlSerializer.CanStream
  commentId: P:Orleans.Storage.OrleansStorageDefaultXmlSerializer.CanStream
  id: CanStream
  parent: Orleans.Storage.OrleansStorageDefaultXmlSerializer
  langs:
  - csharp
  - vb
  name: CanStream
  nameWithType: OrleansStorageDefaultXmlSerializer.CanStream
  fullName: Orleans.Storage.OrleansStorageDefaultXmlSerializer.CanStream
  type: Property
  source:
    remote:
      path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/OrleansStorageDefaultXmlSerializer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: CanStream
    path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/OrleansStorageDefaultXmlSerializer.cs
    startLine: 17
  assemblies:
  - Orleans.Persistence.AdoNet
  namespace: Orleans.Storage
  summary: "\n<xref href=\"Orleans.Storage.IStorageSerializer.CanStream\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public bool CanStream { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanStream As Boolean
  overload: Orleans.Storage.OrleansStorageDefaultXmlSerializer.CanStream*
  implements:
  - Orleans.Storage.IStorageSerializer.CanStream
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Tag
  commentId: P:Orleans.Storage.OrleansStorageDefaultXmlSerializer.Tag
  id: Tag
  parent: Orleans.Storage.OrleansStorageDefaultXmlSerializer
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: OrleansStorageDefaultXmlSerializer.Tag
  fullName: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Tag
  type: Property
  source:
    remote:
      path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/OrleansStorageDefaultXmlSerializer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: Tag
    path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/OrleansStorageDefaultXmlSerializer.cs
    startLine: 22
  assemblies:
  - Orleans.Persistence.AdoNet
  namespace: Orleans.Storage
  summary: "\n<xref href=\"Orleans.Storage.IStorageSerializer.Tag\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public string Tag { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Tag As String
  overload: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Tag*
  implements:
  - Orleans.Storage.IStorageSerializer.Tag
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Orleans.Storage.OrleansStorageDefaultXmlSerializer.#ctor(System.String)
  commentId: M:Orleans.Storage.OrleansStorageDefaultXmlSerializer.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Orleans.Storage.OrleansStorageDefaultXmlSerializer
  langs:
  - csharp
  - vb
  name: OrleansStorageDefaultXmlSerializer(String)
  nameWithType: OrleansStorageDefaultXmlSerializer.OrleansStorageDefaultXmlSerializer(String)
  fullName: Orleans.Storage.OrleansStorageDefaultXmlSerializer.OrleansStorageDefaultXmlSerializer(System.String)
  type: Constructor
  source:
    remote:
      path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/OrleansStorageDefaultXmlSerializer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: .ctor
    path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/OrleansStorageDefaultXmlSerializer.cs
    startLine: 29
  assemblies:
  - Orleans.Persistence.AdoNet
  namespace: Orleans.Storage
  summary: "\nConstructs this serializer from the given parameters.\n"
  example: []
  syntax:
    content: public OrleansStorageDefaultXmlSerializer(string tag)
    parameters:
    - id: tag
      type: System.String
      description: <xref href="Orleans.Storage.IStorageSerializer.Tag" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(tag As String)
  overload: Orleans.Storage.OrleansStorageDefaultXmlSerializer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize(Stream,System.Object)
  commentId: M:Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize(Stream,System.Object)
  id: Serialize(Stream,System.Object)
  parent: Orleans.Storage.OrleansStorageDefaultXmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Stream, Object)
  nameWithType: OrleansStorageDefaultXmlSerializer.Serialize(Stream, Object)
  fullName: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize(Stream, System.Object)
  type: Method
  source:
    remote:
      path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/OrleansStorageDefaultXmlSerializer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: Serialize
    path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/OrleansStorageDefaultXmlSerializer.cs
    startLine: 43
  assemblies:
  - Orleans.Persistence.AdoNet
  namespace: Orleans.Storage
  summary: "\n<xref href=\"Orleans.Storage.IStorageSerializer.Serialize(Stream%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public object Serialize(Stream dataStream, object data)
    parameters:
    - id: dataStream
      type: Stream
    - id: data
      type: System.Object
    return:
      type: System.Object
    content.vb: Public Function Serialize(dataStream As Stream, data As Object) As Object
  overload: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize*
  implements:
  - Orleans.Storage.IStorageSerializer.Serialize(Stream,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize(System.Object)
  commentId: M:Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize(System.Object)
  id: Serialize(System.Object)
  parent: Orleans.Storage.OrleansStorageDefaultXmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Object)
  nameWithType: OrleansStorageDefaultXmlSerializer.Serialize(Object)
  fullName: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize(System.Object)
  type: Method
  source:
    remote:
      path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/OrleansStorageDefaultXmlSerializer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: Serialize
    path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/OrleansStorageDefaultXmlSerializer.cs
    startLine: 58
  assemblies:
  - Orleans.Persistence.AdoNet
  namespace: Orleans.Storage
  summary: "\n<xref href=\"Orleans.Storage.IStorageSerializer.Serialize(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public object Serialize(object data)
    parameters:
    - id: data
      type: System.Object
    return:
      type: System.Object
    content.vb: Public Function Serialize(data As Object) As Object
  overload: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize*
  implements:
  - Orleans.Storage.IStorageSerializer.Serialize(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize(TextWriter,System.Object)
  commentId: M:Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize(TextWriter,System.Object)
  id: Serialize(TextWriter,System.Object)
  parent: Orleans.Storage.OrleansStorageDefaultXmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(TextWriter, Object)
  nameWithType: OrleansStorageDefaultXmlSerializer.Serialize(TextWriter, Object)
  fullName: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize(TextWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/OrleansStorageDefaultXmlSerializer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: Serialize
    path: src/AdoNet/Orleans.Persistence.AdoNet/Storage/Provider/OrleansStorageDefaultXmlSerializer.cs
    startLine: 73
  assemblies:
  - Orleans.Persistence.AdoNet
  namespace: Orleans.Storage
  summary: "\n<xref href=\"Orleans.Storage.IStorageSerializer.Serialize(TextWriter%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public object Serialize(TextWriter writer, object data)
    parameters:
    - id: writer
      type: TextWriter
    - id: data
      type: System.Object
    return:
      type: System.Object
    content.vb: Public Function Serialize(writer As TextWriter, data As Object) As Object
  overload: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize*
  implements:
  - Orleans.Storage.IStorageSerializer.Serialize(TextWriter,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Orleans.Storage
  commentId: N:Orleans.Storage
  isExternal: false
  name: Orleans.Storage
  nameWithType: Orleans.Storage
  fullName: Orleans.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Orleans.Storage.IStorageSerializer
  commentId: T:Orleans.Storage.IStorageSerializer
  parent: Orleans.Storage
  isExternal: false
  name: IStorageSerializer
  nameWithType: IStorageSerializer
  fullName: Orleans.Storage.IStorageSerializer
- uid: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  parent: Orleans.Concurrency.ImmutableExt
  definition: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  name: AsImmutable<OrleansStorageDefaultXmlSerializer>()
  nameWithType: ImmutableExt.AsImmutable<OrleansStorageDefaultXmlSerializer>()
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<Orleans.Storage.OrleansStorageDefaultXmlSerializer>()
  nameWithType.vb: ImmutableExt.AsImmutable(Of OrleansStorageDefaultXmlSerializer)()
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of Orleans.Storage.OrleansStorageDefaultXmlSerializer)()
  name.vb: AsImmutable(Of OrleansStorageDefaultXmlSerializer)()
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable<OrleansStorageDefaultXmlSerializer>
    nameWithType: ImmutableExt.AsImmutable<OrleansStorageDefaultXmlSerializer>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<Orleans.Storage.OrleansStorageDefaultXmlSerializer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable(Of OrleansStorageDefaultXmlSerializer)
    nameWithType: ImmutableExt.AsImmutable(Of OrleansStorageDefaultXmlSerializer)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of Orleans.Storage.OrleansStorageDefaultXmlSerializer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  isExternal: false
  name: AsImmutable<T>(T)
  nameWithType: ImmutableExt.AsImmutable<T>(T)
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>(T)
  nameWithType.vb: ImmutableExt.AsImmutable(Of T)(T)
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)(T)
  name.vb: AsImmutable(Of T)(T)
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable<T>
    nameWithType: ImmutableExt.AsImmutable<T>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable(Of T)
    nameWithType: ImmutableExt.AsImmutable(Of T)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Concurrency.ImmutableExt
  commentId: T:Orleans.Concurrency.ImmutableExt
  parent: Orleans.Concurrency
  isExternal: false
  name: ImmutableExt
  nameWithType: ImmutableExt
  fullName: Orleans.Concurrency.ImmutableExt
- uid: Orleans.Concurrency
  commentId: N:Orleans.Concurrency
  isExternal: false
  name: Orleans.Concurrency
  nameWithType: Orleans.Concurrency
  fullName: Orleans.Concurrency
- uid: Orleans.Storage.IStorageSerializer.CanStream
  commentId: P:Orleans.Storage.IStorageSerializer.CanStream
  parent: Orleans.Storage.IStorageSerializer
  isExternal: false
  name: CanStream
  nameWithType: IStorageSerializer.CanStream
  fullName: Orleans.Storage.IStorageSerializer.CanStream
- uid: Orleans.Storage.OrleansStorageDefaultXmlSerializer.CanStream*
  commentId: Overload:Orleans.Storage.OrleansStorageDefaultXmlSerializer.CanStream
  isExternal: false
  name: CanStream
  nameWithType: OrleansStorageDefaultXmlSerializer.CanStream
  fullName: Orleans.Storage.OrleansStorageDefaultXmlSerializer.CanStream
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Orleans.Storage.IStorageSerializer.Tag
  commentId: P:Orleans.Storage.IStorageSerializer.Tag
  parent: Orleans.Storage.IStorageSerializer
  isExternal: false
  name: Tag
  nameWithType: IStorageSerializer.Tag
  fullName: Orleans.Storage.IStorageSerializer.Tag
- uid: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Tag*
  commentId: Overload:Orleans.Storage.OrleansStorageDefaultXmlSerializer.Tag
  isExternal: false
  name: Tag
  nameWithType: OrleansStorageDefaultXmlSerializer.Tag
  fullName: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Tag
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Orleans.Storage.OrleansStorageDefaultXmlSerializer.#ctor*
  commentId: Overload:Orleans.Storage.OrleansStorageDefaultXmlSerializer.#ctor
  isExternal: false
  name: OrleansStorageDefaultXmlSerializer
  nameWithType: OrleansStorageDefaultXmlSerializer.OrleansStorageDefaultXmlSerializer
  fullName: Orleans.Storage.OrleansStorageDefaultXmlSerializer.OrleansStorageDefaultXmlSerializer
- uid: Orleans.Storage.IStorageSerializer.Serialize(Stream,System.Object)
  commentId: M:Orleans.Storage.IStorageSerializer.Serialize(Stream,System.Object)
  parent: Orleans.Storage.IStorageSerializer
  isExternal: true
  name: Serialize(Stream, Object)
  nameWithType: IStorageSerializer.Serialize(Stream, Object)
  fullName: Orleans.Storage.IStorageSerializer.Serialize(Stream, System.Object)
  spec.csharp:
  - uid: Orleans.Storage.IStorageSerializer.Serialize(Stream,System.Object)
    name: Serialize
    nameWithType: IStorageSerializer.Serialize
    fullName: Orleans.Storage.IStorageSerializer.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Storage.IStorageSerializer.Serialize(Stream,System.Object)
    name: Serialize
    nameWithType: IStorageSerializer.Serialize
    fullName: Orleans.Storage.IStorageSerializer.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize*
  commentId: Overload:Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize
  isExternal: false
  name: Serialize
  nameWithType: OrleansStorageDefaultXmlSerializer.Serialize
  fullName: Orleans.Storage.OrleansStorageDefaultXmlSerializer.Serialize
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Orleans.Storage.IStorageSerializer.Serialize(System.Object)
  commentId: M:Orleans.Storage.IStorageSerializer.Serialize(System.Object)
  parent: Orleans.Storage.IStorageSerializer
  isExternal: true
  name: Serialize(Object)
  nameWithType: IStorageSerializer.Serialize(Object)
  fullName: Orleans.Storage.IStorageSerializer.Serialize(System.Object)
  spec.csharp:
  - uid: Orleans.Storage.IStorageSerializer.Serialize(System.Object)
    name: Serialize
    nameWithType: IStorageSerializer.Serialize
    fullName: Orleans.Storage.IStorageSerializer.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Storage.IStorageSerializer.Serialize(System.Object)
    name: Serialize
    nameWithType: IStorageSerializer.Serialize
    fullName: Orleans.Storage.IStorageSerializer.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Storage.IStorageSerializer.Serialize(TextWriter,System.Object)
  commentId: M:Orleans.Storage.IStorageSerializer.Serialize(TextWriter,System.Object)
  parent: Orleans.Storage.IStorageSerializer
  isExternal: true
  name: Serialize(TextWriter, Object)
  nameWithType: IStorageSerializer.Serialize(TextWriter, Object)
  fullName: Orleans.Storage.IStorageSerializer.Serialize(TextWriter, System.Object)
  spec.csharp:
  - uid: Orleans.Storage.IStorageSerializer.Serialize(TextWriter,System.Object)
    name: Serialize
    nameWithType: IStorageSerializer.Serialize
    fullName: Orleans.Storage.IStorageSerializer.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Storage.IStorageSerializer.Serialize(TextWriter,System.Object)
    name: Serialize
    nameWithType: IStorageSerializer.Serialize
    fullName: Orleans.Storage.IStorageSerializer.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TextWriter
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: TextWriter
