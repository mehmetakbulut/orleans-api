### YamlMime:ManagedReference
items:
- uid: Orleans.Runtime.LoggerExtensionMethods
  commentId: T:Orleans.Runtime.LoggerExtensionMethods
  id: LoggerExtensionMethods
  parent: Orleans.Runtime
  children:
  - Orleans.Runtime.LoggerExtensionMethods.GetLogger(IProviderRuntime,System.String)
  - Orleans.Runtime.LoggerExtensionMethods.GetLogger(Orleans.Grain)
  - Orleans.Runtime.LoggerExtensionMethods.GetLogger(Orleans.Grain,System.String)
  - Orleans.Runtime.LoggerExtensionMethods.GetLogger(Orleans.Runtime.IGrainRuntime,System.String)
  - Orleans.Runtime.LoggerExtensionMethods.Logger(IClusterClient)
  langs:
  - csharp
  - vb
  name: LoggerExtensionMethods
  nameWithType: LoggerExtensionMethods
  fullName: Orleans.Runtime.LoggerExtensionMethods
  type: Class
  source:
    remote:
      path: src/Orleans.Core.Legacy/Logging/LoggerExtensionMethods.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: LoggerExtensionMethods
    path: src/Orleans.Core.Legacy/Logging/LoggerExtensionMethods.cs
    startLine: 11
  assemblies:
  - Orleans.Core.Legacy
  namespace: Orleans.Runtime
  syntax:
    content: 'public static class LoggerExtensionMethods : object'
    content.vb: >-
      Public Module LoggerExtensionMethods

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Orleans.Runtime.LoggerExtensionMethods.GetLogger(Orleans.Grain,System.String)
  commentId: M:Orleans.Runtime.LoggerExtensionMethods.GetLogger(Orleans.Grain,System.String)
  id: GetLogger(Orleans.Grain,System.String)
  isExtensionMethod: true
  parent: Orleans.Runtime.LoggerExtensionMethods
  langs:
  - csharp
  - vb
  name: GetLogger(Grain, String)
  nameWithType: LoggerExtensionMethods.GetLogger(Grain, String)
  fullName: Orleans.Runtime.LoggerExtensionMethods.GetLogger(Orleans.Grain, System.String)
  type: Method
  source:
    remote:
      path: src/Orleans.Core.Legacy/Logging/LoggerExtensionMethods.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: GetLogger
    path: src/Orleans.Core.Legacy/Logging/LoggerExtensionMethods.cs
    startLine: 18
  assemblies:
  - Orleans.Core.Legacy
  namespace: Orleans.Runtime
  summary: "\nReturns a logger object that this grain&apos;s code can use for tracing.\n"
  example: []
  syntax:
    content: public static Logger GetLogger(this Grain grain, string loggerName)
    parameters:
    - id: grain
      type: Orleans.Grain
    - id: loggerName
      type: System.String
    return:
      type: Orleans.Runtime.Logger
      description: Name of the logger to use.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetLogger(grain As Grain, loggerName As String) As Logger
  overload: Orleans.Runtime.LoggerExtensionMethods.GetLogger*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Orleans.Runtime.LoggerExtensionMethods.GetLogger(Orleans.Grain)
  commentId: M:Orleans.Runtime.LoggerExtensionMethods.GetLogger(Orleans.Grain)
  id: GetLogger(Orleans.Grain)
  isExtensionMethod: true
  parent: Orleans.Runtime.LoggerExtensionMethods
  langs:
  - csharp
  - vb
  name: GetLogger(Grain)
  nameWithType: LoggerExtensionMethods.GetLogger(Grain)
  fullName: Orleans.Runtime.LoggerExtensionMethods.GetLogger(Orleans.Grain)
  type: Method
  source:
    remote:
      path: src/Orleans.Core.Legacy/Logging/LoggerExtensionMethods.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: GetLogger
    path: src/Orleans.Core.Legacy/Logging/LoggerExtensionMethods.cs
    startLine: 31
  assemblies:
  - Orleans.Core.Legacy
  namespace: Orleans.Runtime
  summary: "\nReturns a logger object that this grain&apos;s code can use for tracing.\nThe name of the logger will be derived from the grain class name.\n"
  example: []
  syntax:
    content: public static Logger GetLogger(this Grain grain)
    parameters:
    - id: grain
      type: Orleans.Grain
    return:
      type: Orleans.Runtime.Logger
      description: A logger for this grain.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetLogger(grain As Grain) As Logger
  overload: Orleans.Runtime.LoggerExtensionMethods.GetLogger*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Orleans.Runtime.LoggerExtensionMethods.GetLogger(Orleans.Runtime.IGrainRuntime,System.String)
  commentId: M:Orleans.Runtime.LoggerExtensionMethods.GetLogger(Orleans.Runtime.IGrainRuntime,System.String)
  id: GetLogger(Orleans.Runtime.IGrainRuntime,System.String)
  isExtensionMethod: true
  parent: Orleans.Runtime.LoggerExtensionMethods
  langs:
  - csharp
  - vb
  name: GetLogger(IGrainRuntime, String)
  nameWithType: LoggerExtensionMethods.GetLogger(IGrainRuntime, String)
  fullName: Orleans.Runtime.LoggerExtensionMethods.GetLogger(Orleans.Runtime.IGrainRuntime, System.String)
  type: Method
  source:
    remote:
      path: src/Orleans.Core.Legacy/Logging/LoggerExtensionMethods.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: GetLogger
    path: src/Orleans.Core.Legacy/Logging/LoggerExtensionMethods.cs
    startLine: 52
  assemblies:
  - Orleans.Core.Legacy
  namespace: Orleans.Runtime
  summary: "\nExtension method GetLogger for IGrainRuntime\n"
  example: []
  syntax:
    content: public static Logger GetLogger(this IGrainRuntime runtime, string loggerName)
    parameters:
    - id: runtime
      type: Orleans.Runtime.IGrainRuntime
    - id: loggerName
      type: System.String
    return:
      type: Orleans.Runtime.Logger
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetLogger(runtime As IGrainRuntime, loggerName As String) As Logger
  overload: Orleans.Runtime.LoggerExtensionMethods.GetLogger*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Orleans.Runtime.LoggerExtensionMethods.GetLogger(IProviderRuntime,System.String)
  commentId: M:Orleans.Runtime.LoggerExtensionMethods.GetLogger(IProviderRuntime,System.String)
  id: GetLogger(IProviderRuntime,System.String)
  isExtensionMethod: true
  parent: Orleans.Runtime.LoggerExtensionMethods
  langs:
  - csharp
  - vb
  name: GetLogger(IProviderRuntime, String)
  nameWithType: LoggerExtensionMethods.GetLogger(IProviderRuntime, String)
  fullName: Orleans.Runtime.LoggerExtensionMethods.GetLogger(IProviderRuntime, System.String)
  type: Method
  source:
    remote:
      path: src/Orleans.Core.Legacy/Logging/LoggerExtensionMethods.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: GetLogger
    path: src/Orleans.Core.Legacy/Logging/LoggerExtensionMethods.cs
    startLine: 65
  assemblies:
  - Orleans.Core.Legacy
  namespace: Orleans.Runtime
  summary: "\nProvides a logger to be used by the provider. \n"
  example: []
  syntax:
    content: public static Logger GetLogger(this IProviderRuntime runtime, string loggerName)
    parameters:
    - id: runtime
      type: IProviderRuntime
      description: Provider runtime
    - id: loggerName
      type: System.String
      description: Name of the logger being requested.
    return:
      type: Orleans.Runtime.Logger
      description: Object reference to the requested logger.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetLogger(runtime As IProviderRuntime, loggerName As String) As Logger
  overload: Orleans.Runtime.LoggerExtensionMethods.GetLogger*
  seealso:
  - linkId: Orleans.Runtime.LoggerType
    commentId: T:Orleans.Runtime.LoggerType
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Orleans.Runtime.LoggerExtensionMethods.Logger(IClusterClient)
  commentId: M:Orleans.Runtime.LoggerExtensionMethods.Logger(IClusterClient)
  id: Logger(IClusterClient)
  isExtensionMethod: true
  parent: Orleans.Runtime.LoggerExtensionMethods
  langs:
  - csharp
  - vb
  name: Logger(IClusterClient)
  nameWithType: LoggerExtensionMethods.Logger(IClusterClient)
  fullName: Orleans.Runtime.LoggerExtensionMethods.Logger(IClusterClient)
  type: Method
  source:
    remote:
      path: src/Orleans.Core.Legacy/Logging/LoggerExtensionMethods.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: Logger
    path: src/Orleans.Core.Legacy/Logging/LoggerExtensionMethods.cs
    startLine: 76
  assemblies:
  - Orleans.Core.Legacy
  namespace: Orleans.Runtime
  summary: "\nProvides logging facility for applications.\n"
  example: []
  syntax:
    content: public static Logger Logger(this IClusterClient client)
    parameters:
    - id: client
      type: IClusterClient
    return:
      type: Orleans.Runtime.Logger
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Logger(client As IClusterClient) As Logger
  overload: Orleans.Runtime.LoggerExtensionMethods.Logger*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Orleans.Runtime
  commentId: N:Orleans.Runtime
  isExternal: false
  name: Orleans.Runtime
  nameWithType: Orleans.Runtime
  fullName: Orleans.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Orleans.Runtime.LoggerExtensionMethods.GetLogger*
  commentId: Overload:Orleans.Runtime.LoggerExtensionMethods.GetLogger
  isExternal: false
  name: GetLogger
  nameWithType: LoggerExtensionMethods.GetLogger
  fullName: Orleans.Runtime.LoggerExtensionMethods.GetLogger
- uid: Orleans.Grain
  commentId: T:Orleans.Grain
  parent: Orleans
  isExternal: false
  name: Grain
  nameWithType: Grain
  fullName: Orleans.Grain
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Orleans.Runtime.Logger
  commentId: T:Orleans.Runtime.Logger
  parent: Orleans.Runtime
  isExternal: false
  name: Logger
  nameWithType: Logger
  fullName: Orleans.Runtime.Logger
- uid: Orleans
  commentId: N:Orleans
  isExternal: false
  name: Orleans
  nameWithType: Orleans
  fullName: Orleans
- uid: Orleans.Runtime.IGrainRuntime
  commentId: T:Orleans.Runtime.IGrainRuntime
  parent: Orleans.Runtime
  isExternal: false
  name: IGrainRuntime
  nameWithType: IGrainRuntime
  fullName: Orleans.Runtime.IGrainRuntime
- uid: Orleans.Runtime.LoggerType
  commentId: T:Orleans.Runtime.LoggerType
  parent: Orleans.Runtime
  isExternal: false
  name: LoggerType
  nameWithType: LoggerType
  fullName: Orleans.Runtime.LoggerType
- uid: IProviderRuntime
  isExternal: true
  name: IProviderRuntime
  nameWithType: IProviderRuntime
  fullName: IProviderRuntime
- uid: Orleans.Runtime.LoggerExtensionMethods.Logger*
  commentId: Overload:Orleans.Runtime.LoggerExtensionMethods.Logger
  isExternal: false
  name: Logger
  nameWithType: LoggerExtensionMethods.Logger
  fullName: Orleans.Runtime.LoggerExtensionMethods.Logger
- uid: IClusterClient
  isExternal: true
  name: IClusterClient
  nameWithType: IClusterClient
  fullName: IClusterClient
