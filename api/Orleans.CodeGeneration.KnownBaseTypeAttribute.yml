### YamlMime:ManagedReference
items:
- uid: Orleans.CodeGeneration.KnownBaseTypeAttribute
  commentId: T:Orleans.CodeGeneration.KnownBaseTypeAttribute
  id: KnownBaseTypeAttribute
  parent: Orleans.CodeGeneration
  children: []
  langs:
  - csharp
  - vb
  name: KnownBaseTypeAttribute
  nameWithType: KnownBaseTypeAttribute
  fullName: Orleans.CodeGeneration.KnownBaseTypeAttribute
  type: Class
  source:
    remote:
      path: src/Orleans.Core.Abstractions/CodeGeneration/ConsiderForCodeGenerationAttribute.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: KnownBaseTypeAttribute
    path: src/Orleans.Core.Abstractions/CodeGeneration/ConsiderForCodeGenerationAttribute.cs
    startLine: 55
  assemblies:
  - Orleans.Core.Abstractions
  namespace: Orleans.CodeGeneration
  summary: "\nIndicates that this type and all subtypes are to be considered as [Serializable].\n"
  example: []
  syntax:
    content: 'public sealed class KnownBaseTypeAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class KnownBaseTypeAttribute

          Inherits Attribute
  inheritance:
  - System.Object
  extensionMethods:
  - Orleans.CodeGeneration.KnownBaseTypeAttribute.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
references:
- uid: Orleans.CodeGeneration
  commentId: N:Orleans.CodeGeneration
  isExternal: false
  name: Orleans.CodeGeneration
  nameWithType: Orleans.CodeGeneration
  fullName: Orleans.CodeGeneration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Orleans.CodeGeneration.KnownBaseTypeAttribute.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  parent: Orleans.Concurrency.ImmutableExt
  definition: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  name: AsImmutable<KnownBaseTypeAttribute>()
  nameWithType: ImmutableExt.AsImmutable<KnownBaseTypeAttribute>()
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<Orleans.CodeGeneration.KnownBaseTypeAttribute>()
  nameWithType.vb: ImmutableExt.AsImmutable(Of KnownBaseTypeAttribute)()
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of Orleans.CodeGeneration.KnownBaseTypeAttribute)()
  name.vb: AsImmutable(Of KnownBaseTypeAttribute)()
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable<KnownBaseTypeAttribute>
    nameWithType: ImmutableExt.AsImmutable<KnownBaseTypeAttribute>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<Orleans.CodeGeneration.KnownBaseTypeAttribute>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable(Of KnownBaseTypeAttribute)
    nameWithType: ImmutableExt.AsImmutable(Of KnownBaseTypeAttribute)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of Orleans.CodeGeneration.KnownBaseTypeAttribute)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  isExternal: false
  name: AsImmutable<T>(T)
  nameWithType: ImmutableExt.AsImmutable<T>(T)
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>(T)
  nameWithType.vb: ImmutableExt.AsImmutable(Of T)(T)
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)(T)
  name.vb: AsImmutable(Of T)(T)
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable<T>
    nameWithType: ImmutableExt.AsImmutable<T>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable(Of T)
    nameWithType: ImmutableExt.AsImmutable(Of T)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Concurrency.ImmutableExt
  commentId: T:Orleans.Concurrency.ImmutableExt
  parent: Orleans.Concurrency
  isExternal: false
  name: ImmutableExt
  nameWithType: ImmutableExt
  fullName: Orleans.Concurrency.ImmutableExt
- uid: Orleans.Concurrency
  commentId: N:Orleans.Concurrency
  isExternal: false
  name: Orleans.Concurrency
  nameWithType: Orleans.Concurrency
  fullName: Orleans.Concurrency
