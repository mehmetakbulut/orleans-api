### YamlMime:ManagedReference
items:
- uid: Orleans.Concurrency.MayInterleaveAttribute
  commentId: T:Orleans.Concurrency.MayInterleaveAttribute
  id: MayInterleaveAttribute
  parent: Orleans.Concurrency
  children:
  - Orleans.Concurrency.MayInterleaveAttribute.#ctor(System.String)
  langs:
  - csharp
  - vb
  name: MayInterleaveAttribute
  nameWithType: MayInterleaveAttribute
  fullName: Orleans.Concurrency.MayInterleaveAttribute
  type: Class
  source:
    remote:
      path: src/Orleans.Core.Abstractions/Concurrency/GrainAttributeConcurrency.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: MayInterleaveAttribute
    path: src/Orleans.Core.Abstractions/Concurrency/GrainAttributeConcurrency.cs
    startLine: 80
  assemblies:
  - Orleans.Core.Abstractions
  namespace: Orleans.Concurrency
  summary: "\nThe MayInterleaveAttribute attribute is used to mark classes\nthat want to control request interleaving via supplied method callback.\n"
  remarks: "\nThe callback method name should point to a public static function declared on the same class\nand having the following signature: <code>public static bool MayInterleave(InvokeMethodRequest req)</code>\n"
  example: []
  syntax:
    content: 'public sealed class MayInterleaveAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class MayInterleaveAttribute

          Inherits Attribute
  inheritance:
  - System.Object
  extensionMethods:
  - Orleans.Concurrency.MayInterleaveAttribute.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Orleans.Concurrency.MayInterleaveAttribute.#ctor(System.String)
  commentId: M:Orleans.Concurrency.MayInterleaveAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Orleans.Concurrency.MayInterleaveAttribute
  langs:
  - csharp
  - vb
  name: MayInterleaveAttribute(String)
  nameWithType: MayInterleaveAttribute.MayInterleaveAttribute(String)
  fullName: Orleans.Concurrency.MayInterleaveAttribute.MayInterleaveAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/Orleans.Core.Abstractions/Concurrency/GrainAttributeConcurrency.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: .ctor
    path: src/Orleans.Core.Abstractions/Concurrency/GrainAttributeConcurrency.cs
    startLine: 88
  assemblies:
  - Orleans.Core.Abstractions
  namespace: Orleans.Concurrency
  syntax:
    content: public MayInterleaveAttribute(string callbackMethodName)
    parameters:
    - id: callbackMethodName
      type: System.String
    content.vb: Public Sub New(callbackMethodName As String)
  overload: Orleans.Concurrency.MayInterleaveAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Orleans.Concurrency
  commentId: N:Orleans.Concurrency
  isExternal: false
  name: Orleans.Concurrency
  nameWithType: Orleans.Concurrency
  fullName: Orleans.Concurrency
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Orleans.Concurrency.MayInterleaveAttribute.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  parent: Orleans.Concurrency.ImmutableExt
  definition: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  name: AsImmutable<MayInterleaveAttribute>()
  nameWithType: ImmutableExt.AsImmutable<MayInterleaveAttribute>()
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<Orleans.Concurrency.MayInterleaveAttribute>()
  nameWithType.vb: ImmutableExt.AsImmutable(Of MayInterleaveAttribute)()
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of Orleans.Concurrency.MayInterleaveAttribute)()
  name.vb: AsImmutable(Of MayInterleaveAttribute)()
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable<MayInterleaveAttribute>
    nameWithType: ImmutableExt.AsImmutable<MayInterleaveAttribute>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<Orleans.Concurrency.MayInterleaveAttribute>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable(Of MayInterleaveAttribute)
    nameWithType: ImmutableExt.AsImmutable(Of MayInterleaveAttribute)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of Orleans.Concurrency.MayInterleaveAttribute)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  isExternal: false
  name: AsImmutable<T>(T)
  nameWithType: ImmutableExt.AsImmutable<T>(T)
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>(T)
  nameWithType.vb: ImmutableExt.AsImmutable(Of T)(T)
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)(T)
  name.vb: AsImmutable(Of T)(T)
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable<T>
    nameWithType: ImmutableExt.AsImmutable<T>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable(Of T)
    nameWithType: ImmutableExt.AsImmutable(Of T)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Concurrency.ImmutableExt
  commentId: T:Orleans.Concurrency.ImmutableExt
  parent: Orleans.Concurrency
  isExternal: false
  name: ImmutableExt
  nameWithType: ImmutableExt
  fullName: Orleans.Concurrency.ImmutableExt
- uid: Orleans.Concurrency.MayInterleaveAttribute.#ctor*
  commentId: Overload:Orleans.Concurrency.MayInterleaveAttribute.#ctor
  isExternal: false
  name: MayInterleaveAttribute
  nameWithType: MayInterleaveAttribute.MayInterleaveAttribute
  fullName: Orleans.Concurrency.MayInterleaveAttribute.MayInterleaveAttribute
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
