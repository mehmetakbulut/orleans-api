### YamlMime:ManagedReference
items:
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer
  commentId: T:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer
  id: OrleansPerfCounterTelemetryConsumer
  parent: OrleansTelemetryConsumers.Counters
  children:
  - OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.#ctor(ILoggerFactory)
  - OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.AreWindowsPerfCountersAvailable(ILogger)
  - OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Close
  - OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.DecrementMetric(System.String)
  - OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.DecrementMetric(System.String,System.Double)
  - OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Flush
  - OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.IncrementMetric(System.String)
  - OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.IncrementMetric(System.String,System.Double)
  - OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric(System.String,System.Double,System.Collections.Generic.IDictionary{System.String,System.String})
  - OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric(System.String,System.TimeSpan,System.Collections.Generic.IDictionary{System.String,System.String})
  langs:
  - csharp
  - vb
  name: OrleansPerfCounterTelemetryConsumer
  nameWithType: OrleansPerfCounterTelemetryConsumer
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer
  type: Class
  source:
    remote:
      path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: OrleansPerfCounterTelemetryConsumer
    path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
    startLine: 13
  assemblies:
  - Orleans.TelemetryConsumers.Counters
  namespace: OrleansTelemetryConsumers.Counters
  summary: "\nTelemetry consumer that writes metrics to predefined performance counters.\n"
  example: []
  syntax:
    content: 'public class OrleansPerfCounterTelemetryConsumer : IMetricTelemetryConsumer'
    content.vb: >-
      Public Class OrleansPerfCounterTelemetryConsumer

          Inherits IMetricTelemetryConsumer
  inheritance:
  - System.Object
  extensionMethods:
  - OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.#ctor(ILoggerFactory)
  commentId: M:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.#ctor(ILoggerFactory)
  id: '#ctor(ILoggerFactory)'
  parent: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer
  langs:
  - csharp
  - vb
  name: OrleansPerfCounterTelemetryConsumer(ILoggerFactory)
  nameWithType: OrleansPerfCounterTelemetryConsumer.OrleansPerfCounterTelemetryConsumer(ILoggerFactory)
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.OrleansPerfCounterTelemetryConsumer(ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: .ctor
    path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
    startLine: 29
  assemblies:
  - Orleans.TelemetryConsumers.Counters
  namespace: OrleansTelemetryConsumers.Counters
  summary: "\nDefault constructor\n"
  example: []
  syntax:
    content: public OrleansPerfCounterTelemetryConsumer(ILoggerFactory loggerFactory)
    parameters:
    - id: loggerFactory
      type: ILoggerFactory
    content.vb: Public Sub New(loggerFactory As ILoggerFactory)
  overload: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.AreWindowsPerfCountersAvailable(ILogger)
  commentId: M:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.AreWindowsPerfCountersAvailable(ILogger)
  id: AreWindowsPerfCountersAvailable(ILogger)
  parent: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer
  langs:
  - csharp
  - vb
  name: AreWindowsPerfCountersAvailable(ILogger)
  nameWithType: OrleansPerfCounterTelemetryConsumer.AreWindowsPerfCountersAvailable(ILogger)
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.AreWindowsPerfCountersAvailable(ILogger)
  type: Method
  source:
    remote:
      path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: AreWindowsPerfCountersAvailable
    path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
    startLine: 45
  assemblies:
  - Orleans.TelemetryConsumers.Counters
  namespace: OrleansTelemetryConsumers.Counters
  summary: "\nChecks to see if windows perf counters as supported by OS.\n"
  example: []
  syntax:
    content: public static bool AreWindowsPerfCountersAvailable(ILogger logger)
    parameters:
    - id: logger
      type: ILogger
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function AreWindowsPerfCountersAvailable(logger As ILogger) As Boolean
  overload: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.AreWindowsPerfCountersAvailable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.IncrementMetric(System.String)
  commentId: M:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.IncrementMetric(System.String)
  id: IncrementMetric(System.String)
  parent: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer
  langs:
  - csharp
  - vb
  name: IncrementMetric(String)
  nameWithType: OrleansPerfCounterTelemetryConsumer.IncrementMetric(String)
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.IncrementMetric(System.String)
  type: Method
  source:
    remote:
      path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: IncrementMetric
    path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
    startLine: 135
  assemblies:
  - Orleans.TelemetryConsumers.Counters
  namespace: OrleansTelemetryConsumers.Counters
  summary: "\nIncrement metric.\n"
  example: []
  syntax:
    content: public void IncrementMetric(string name)
    parameters:
    - id: name
      type: System.String
      description: metric name
    content.vb: Public Sub IncrementMetric(name As String)
  overload: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.IncrementMetric*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.IncrementMetric(System.String,System.Double)
  commentId: M:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.IncrementMetric(System.String,System.Double)
  id: IncrementMetric(System.String,System.Double)
  parent: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer
  langs:
  - csharp
  - vb
  name: IncrementMetric(String, Double)
  nameWithType: OrleansPerfCounterTelemetryConsumer.IncrementMetric(String, Double)
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.IncrementMetric(System.String, System.Double)
  type: Method
  source:
    remote:
      path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: IncrementMetric
    path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
    startLine: 142
  assemblies:
  - Orleans.TelemetryConsumers.Counters
  namespace: OrleansTelemetryConsumers.Counters
  summary: "\nIncrement metric by value.\n"
  example: []
  syntax:
    content: public void IncrementMetric(string name, double value)
    parameters:
    - id: name
      type: System.String
      description: metric name
    - id: value
      type: System.Double
      description: metric value
    content.vb: Public Sub IncrementMetric(name As String, value As Double)
  overload: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.IncrementMetric*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric(System.String,System.Double,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric(System.String,System.Double,System.Collections.Generic.IDictionary{System.String,System.String})
  id: TrackMetric(System.String,System.Double,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer
  langs:
  - csharp
  - vb
  name: TrackMetric(String, Double, IDictionary<String, String>)
  nameWithType: OrleansPerfCounterTelemetryConsumer.TrackMetric(String, Double, IDictionary<String, String>)
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric(System.String, System.Double, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: TrackMetric
    path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
    startLine: 150
  assemblies:
  - Orleans.TelemetryConsumers.Counters
  namespace: OrleansTelemetryConsumers.Counters
  summary: "\nTrack metric value\n"
  example: []
  syntax:
    content: public void TrackMetric(string name, double value, IDictionary<string, string> properties = null)
    parameters:
    - id: name
      type: System.String
      description: metric name
    - id: value
      type: System.Double
      description: metric value
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: related properties
    content.vb: Public Sub TrackMetric(name As String, value As Double, properties As IDictionary(Of String, String) = Nothing)
  overload: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric*
  nameWithType.vb: OrleansPerfCounterTelemetryConsumer.TrackMetric(String, Double, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric(System.String, System.Double, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: TrackMetric(String, Double, IDictionary(Of String, String))
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric(System.String,System.TimeSpan,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric(System.String,System.TimeSpan,System.Collections.Generic.IDictionary{System.String,System.String})
  id: TrackMetric(System.String,System.TimeSpan,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer
  langs:
  - csharp
  - vb
  name: TrackMetric(String, TimeSpan, IDictionary<String, String>)
  nameWithType: OrleansPerfCounterTelemetryConsumer.TrackMetric(String, TimeSpan, IDictionary<String, String>)
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric(System.String, System.TimeSpan, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: TrackMetric
    path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
    startLine: 158
  assemblies:
  - Orleans.TelemetryConsumers.Counters
  namespace: OrleansTelemetryConsumers.Counters
  summary: "\nTrack metric value\n"
  example: []
  syntax:
    content: public void TrackMetric(string name, TimeSpan value, IDictionary<string, string> properties = null)
    parameters:
    - id: name
      type: System.String
      description: metric name
    - id: value
      type: System.TimeSpan
      description: metric value
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: related properties
    content.vb: Public Sub TrackMetric(name As String, value As TimeSpan, properties As IDictionary(Of String, String) = Nothing)
  overload: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric*
  nameWithType.vb: OrleansPerfCounterTelemetryConsumer.TrackMetric(String, TimeSpan, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric(System.String, System.TimeSpan, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: TrackMetric(String, TimeSpan, IDictionary(Of String, String))
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.DecrementMetric(System.String)
  commentId: M:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.DecrementMetric(System.String)
  id: DecrementMetric(System.String)
  parent: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer
  langs:
  - csharp
  - vb
  name: DecrementMetric(String)
  nameWithType: OrleansPerfCounterTelemetryConsumer.DecrementMetric(String)
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.DecrementMetric(System.String)
  type: Method
  source:
    remote:
      path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: DecrementMetric
    path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
    startLine: 164
  assemblies:
  - Orleans.TelemetryConsumers.Counters
  namespace: OrleansTelemetryConsumers.Counters
  summary: "\nDecrement metric\n"
  example: []
  syntax:
    content: public void DecrementMetric(string name)
    parameters:
    - id: name
      type: System.String
      description: metric name
    content.vb: Public Sub DecrementMetric(name As String)
  overload: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.DecrementMetric*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.DecrementMetric(System.String,System.Double)
  commentId: M:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.DecrementMetric(System.String,System.Double)
  id: DecrementMetric(System.String,System.Double)
  parent: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer
  langs:
  - csharp
  - vb
  name: DecrementMetric(String, Double)
  nameWithType: OrleansPerfCounterTelemetryConsumer.DecrementMetric(String, Double)
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.DecrementMetric(System.String, System.Double)
  type: Method
  source:
    remote:
      path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: DecrementMetric
    path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
    startLine: 171
  assemblies:
  - Orleans.TelemetryConsumers.Counters
  namespace: OrleansTelemetryConsumers.Counters
  summary: "\nDecrement metric by value\n"
  example: []
  syntax:
    content: public void DecrementMetric(string name, double value)
    parameters:
    - id: name
      type: System.String
      description: metric name
    - id: value
      type: System.Double
      description: metric value
    content.vb: Public Sub DecrementMetric(name As String, value As Double)
  overload: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.DecrementMetric*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Flush
  commentId: M:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Flush
  id: Flush
  parent: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: OrleansPerfCounterTelemetryConsumer.Flush()
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Flush()
  type: Method
  source:
    remote:
      path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: Flush
    path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
    startLine: 176
  assemblies:
  - Orleans.TelemetryConsumers.Counters
  namespace: OrleansTelemetryConsumers.Counters
  summary: "\nWrite all pending metrics\n"
  example: []
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  overload: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Flush*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Close
  commentId: M:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Close
  id: Close
  parent: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: OrleansPerfCounterTelemetryConsumer.Close()
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Close()
  type: Method
  source:
    remote:
      path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
      branch: api-reference
      repo: https://github.com/mehmetakbulut/orleans.git
    id: Close
    path: src/Orleans.TelemetryConsumers.Counters/OrleansPerfCounterTelemetryConsumer.cs
    startLine: 181
  assemblies:
  - Orleans.TelemetryConsumers.Counters
  namespace: OrleansTelemetryConsumers.Counters
  summary: "\nClose telemetry consumer\n"
  example: []
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Close*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OrleansTelemetryConsumers.Counters
  commentId: N:OrleansTelemetryConsumers.Counters
  isExternal: false
  name: OrleansTelemetryConsumers.Counters
  nameWithType: OrleansTelemetryConsumers.Counters
  fullName: OrleansTelemetryConsumers.Counters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Orleans.Concurrency.ImmutableExt.AsImmutable``1
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  parent: Orleans.Concurrency.ImmutableExt
  definition: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  name: AsImmutable<OrleansPerfCounterTelemetryConsumer>()
  nameWithType: ImmutableExt.AsImmutable<OrleansPerfCounterTelemetryConsumer>()
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer>()
  nameWithType.vb: ImmutableExt.AsImmutable(Of OrleansPerfCounterTelemetryConsumer)()
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer)()
  name.vb: AsImmutable(Of OrleansPerfCounterTelemetryConsumer)()
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable<OrleansPerfCounterTelemetryConsumer>
    nameWithType: ImmutableExt.AsImmutable<OrleansPerfCounterTelemetryConsumer>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1
    name: AsImmutable(Of OrleansPerfCounterTelemetryConsumer)
    nameWithType: ImmutableExt.AsImmutable(Of OrleansPerfCounterTelemetryConsumer)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  commentId: M:Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
  isExternal: false
  name: AsImmutable<T>(T)
  nameWithType: ImmutableExt.AsImmutable<T>(T)
  fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>(T)
  nameWithType.vb: ImmutableExt.AsImmutable(Of T)(T)
  fullName.vb: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)(T)
  name.vb: AsImmutable(Of T)(T)
  spec.csharp:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable<T>
    nameWithType: ImmutableExt.AsImmutable<T>
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Orleans.Concurrency.ImmutableExt.AsImmutable``1(``0)
    name: AsImmutable(Of T)
    nameWithType: ImmutableExt.AsImmutable(Of T)
    fullName: Orleans.Concurrency.ImmutableExt.AsImmutable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Orleans.Concurrency.ImmutableExt
  commentId: T:Orleans.Concurrency.ImmutableExt
  parent: Orleans.Concurrency
  isExternal: false
  name: ImmutableExt
  nameWithType: ImmutableExt
  fullName: Orleans.Concurrency.ImmutableExt
- uid: Orleans.Concurrency
  commentId: N:Orleans.Concurrency
  isExternal: false
  name: Orleans.Concurrency
  nameWithType: Orleans.Concurrency
  fullName: Orleans.Concurrency
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.#ctor*
  commentId: Overload:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.#ctor
  isExternal: false
  name: OrleansPerfCounterTelemetryConsumer
  nameWithType: OrleansPerfCounterTelemetryConsumer.OrleansPerfCounterTelemetryConsumer
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.OrleansPerfCounterTelemetryConsumer
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.AreWindowsPerfCountersAvailable*
  commentId: Overload:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.AreWindowsPerfCountersAvailable
  isExternal: false
  name: AreWindowsPerfCountersAvailable
  nameWithType: OrleansPerfCounterTelemetryConsumer.AreWindowsPerfCountersAvailable
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.AreWindowsPerfCountersAvailable
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.IncrementMetric*
  commentId: Overload:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.IncrementMetric
  isExternal: false
  name: IncrementMetric
  nameWithType: OrleansPerfCounterTelemetryConsumer.IncrementMetric
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.IncrementMetric
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric*
  commentId: Overload:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric
  isExternal: false
  name: TrackMetric
  nameWithType: OrleansPerfCounterTelemetryConsumer.TrackMetric
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.TrackMetric
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.DecrementMetric*
  commentId: Overload:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.DecrementMetric
  isExternal: false
  name: DecrementMetric
  nameWithType: OrleansPerfCounterTelemetryConsumer.DecrementMetric
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.DecrementMetric
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Flush*
  commentId: Overload:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Flush
  isExternal: false
  name: Flush
  nameWithType: OrleansPerfCounterTelemetryConsumer.Flush
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Flush
- uid: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Close*
  commentId: Overload:OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Close
  isExternal: false
  name: Close
  nameWithType: OrleansPerfCounterTelemetryConsumer.Close
  fullName: OrleansTelemetryConsumers.Counters.OrleansPerfCounterTelemetryConsumer.Close
